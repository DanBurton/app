{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["renderPhase","phase","parent","Loading","console","log","React","Component","Start","this","props","phaseChange","onClick","todo","st","thiz","key","def","val","state","undefined","Todo","itemsStr","localStorage","getItem","items","JSON","parse","Array","isArray","setState","setItem","stringify","item","idx","splice","e","_handleAddItem","theInput","document","getElementById","value","focus","addItem","map","removeItem","id","onKeyDown","_handleKeydown","Unknown","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b34fd100.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction renderPhase(phase, parent) {\n  switch (phase) {\n    case 'loading':\n      return <Loading {...{phase, parent}} />;\n    case 'start':\n      return <Start {...{phase, parent}} />;\n    case 'todo':\n      return <Todo {...{phase, parent}} />;\n    default:\n      return <Unknown {...{phase, parent} }/>;\n  }\n}\n\nclass Loading extends React.Component {\n  render() {\n    console.log('render: loading');\n    return (<p>loading phase</p>);\n  }\n}\n\nclass Start extends React.Component {\n  todo() {\n    const {phase} = this.props;\n    console.log(`fn: ${phase}.todo()`);\n    const {parent} = this.props;\n    parent.phaseChange('todo');\n  }\n  render() {\n    const {phase} = this.props;\n    console.log(`render: ${phase}`);\n    return (<div>\n      <h1>start</h1>\n      <button onClick={() => this.todo()}>todo</button>\n    </div>);\n  }\n}\n\nfunction st(thiz, key, def) {\n  const val = (thiz.state || {})[key];\n  return val !== undefined ? val : def;\n}\n\nclass Todo extends React.Component {\n  componentDidMount() {\n    const itemsStr = localStorage.getItem('items');\n    if (itemsStr) {\n      const items = JSON.parse(itemsStr);\n      const state = {items};\n      if (Array.isArray(items)) {\n        console.log('loaded', state);\n        this.setState(state);\n      } else {\n        console.log('failed to load', state);\n      }\n    }\n  }\n  componentDidUpdate() {\n    const {items} = this.state;\n    localStorage.setItem('items', JSON.stringify(items));\n  }\n  addItem(item) {\n    const {phase} = this.props;\n    console.log(`fn: ${phase}.addItem(${JSON.stringify(item)})`);\n    const items = [...st(this, 'items', []), item];\n    this.setState({items});\n  }\n  removeItem(idx) {\n    const {phase} = this.props;\n    console.log(`fn: ${phase}.removeItem(${JSON.stringify(idx)})`);\n    const items = [...st(this, 'items', [])];\n    items.splice(idx, 1);\n    this.setState({items});\n  }\n  _handleKeydown(e) {\n    if (e.key === 'Enter') this._handleAddItem();\n  }\n  _handleAddItem() {\n    const theInput = document.getElementById('theInput');\n    const item = theInput.value;\n    theInput.value = '';\n    theInput.focus();\n    this.addItem(item);\n  }\n  render() {\n    const {phase, parent} = this.props;\n    const items = st(this, 'items', []);\n    console.log(`render: ${phase}`, items);\n    return (<div>\n      <ol>\n        {items.map((item, idx) => {\n          return (\n            <li key={idx}>\n              {item}\n              <button onClick={() => this.removeItem(idx)}>-</button>\n            </li>\n          );\n        })}\n      </ol>\n      <input id=\"theInput\" onKeyDown={(e) => this._handleKeydown(e)} />\n      <button onClick={() => this._handleAddItem()}>+</button>\n      <br /><br />\n      <button onClick={() => parent.phaseChange('start')}>back to start</button>\n    </div>);\n  }\n}\n\nclass Unknown extends React.Component {\n  render() {\n    console.log('render: unknown');\n    return (<p>Unknown phase '{this.props.phase}'</p>);\n  }\n}\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.setState({phase: 'start'});\n  }\n  phaseChange(phase) {\n    console.log(`fn: App.phaseChange(${JSON.stringify(phase)})`);\n    this.setState({phase});\n  }\n  render() {\n    const state = this.state || {};\n    const phase = state.phase || 'loading';\n    return (\n      <div className=\"App\">\n        {renderPhase(phase, this)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}